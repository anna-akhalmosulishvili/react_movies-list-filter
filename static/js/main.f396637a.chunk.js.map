{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/SearchField/SearchField.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","map","imdbId","SearchField","filterBy","type","id","placeholder","onChange","e","target","value","App","useState","query","setQuery","visibleMovies","preparedMovies","searchPropmpt","toLowerCase","trim","filter","includes","getPreparedMovies","moviesFromServer","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"6RAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BChCGQ,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCPfC,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,OACE,qBAAKT,UAAU,UAAf,SACE,uBACEU,KAAK,OACLC,GAAG,eACHX,UAAU,QACVY,YAAY,mBACZC,SAAU,SAACC,GACTL,EAASK,EAAEC,OAAOC,aCQrB,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAjBR,SAA2BhB,EAAiBc,GAC1C,IAAMG,EAAc,YAAOjB,GAE3B,IAAKc,EACH,OAAOd,EAGT,IAAMkB,EAAgBJ,EAAMK,cAAcC,OAE1C,OAAOH,EAAeI,QACpB,SAAA/B,GAAK,OAAIA,EAAMI,MAAMyB,cAAcG,SAASJ,IACtC5B,EAAMG,YAAY0B,cAAcG,SAASJ,MAM3BK,CAAkBC,EAAkBV,GAE1D,OACE,sBAAKnB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAO8B,QAAQ,eAAe9B,UAAU,QAAxC,0BAGA,cAAC,EAAD,CAAaS,SAAUW,SAG3B,cAAC,EAAD,CAAYf,OAAQgB,OAGtB,qBAAKrB,UAAU,UAAf,mCCpCN+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.f396637a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","interface Props {\n  filterBy(value: string) :void;\n}\n\nexport const SearchField: React.FC<Props> = ({ filterBy }) => {\n  return (\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        id=\"search-query\"\n        className=\"input\"\n        placeholder=\"Type search word\"\n        onChange={(e) => {\n          filterBy(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchField } from './components/SearchField/SearchField';\n\nfunction getPreparedMovies(movies: Movie[], query:string) {\n  const preparedMovies = [...movies];\n\n  if (!query) {\n    return movies;\n  }\n\n  const searchPropmpt = query.toLowerCase().trim();\n\n  return preparedMovies.filter(\n    movie => movie.title.toLowerCase().includes(searchPropmpt)\n       || movie.description.toLowerCase().includes(searchPropmpt),\n  );\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getPreparedMovies(moviesFromServer, query);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n            <SearchField filterBy={setQuery} />\n          </div>\n        </div>\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}